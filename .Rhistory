demo()
demo(base.image)
demo(image)
demo(error.catching)
q()
getwd()
package_version("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, r_version == is.na(c(3, 5, NA, 10)))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(c(3, 5, NA, 10)))
filter(cran, r_version == !is.na(c(3, 5, NA, 10)))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id:size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/ 2^10)
mutate(cran3,correct_size = size - 1000)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
q()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x.y)
plot(x,y)
library(swirl)
swirl()
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm = T)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Ozone and Wind in New York City")
title(main="Wind and Ozone in NYC")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
?points
par("points")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
?points
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
library(nmle)
install.packages(nmle)
library(nlme)
library(lattice)
xyplot(weight~time| Diet, BodyWeight)
xyplot(weight~Time| Diet, BodyWeight)
?lattice
?xyplot
library(datasets)
data("airquality")
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
str(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
str(movies)
library(ggplot2)
str(movies)
getwd()
setwd("/Users/DBrine001/Documents/Pers/datasciencecoursera/reproducible_research")
source("NY_charges_vs_payments.R")
mean_charges_payments_in_ny
mean_charges_payments_in_ny()
source("NY_charges_vs_payments.R")
mean_charges_payments_in_ny()
?qplot
source("NY_charges_vs_payments.R")
mean_charges_payments_in_ny()
source("NY_charges_vs_payments.R")
mean_charges_payments_in_ny()
source("NY_charges_vs_payments.R")
mean_charges_payments_in_ny()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
?qplot
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
?qplot
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
?qplot
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
?qplot
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("NY_charges_vs_payments.R")
NY_charges_vs_payments()
source("reprod_rsrch_optional1_week1.R")
NY_charges_vs_payments()
source("reprod_rsrch_optional2_week1.R")
NY_charges_vs_payments2()
source("reprod_rsrch_optional2_week1.R")
NY_charges_vs_payments2()
source("reprod_rsrch_optional2_week1.R")
NY_charges_vs_payments2()
source("reprod_rsrch_optional2_week1.R")
NY_charges_vs_payments2()
source("reprod_rsrch_optional1_week1.R")
NY_charges_vs_payments()
source("reprod_rsrch_optional2_week1.R")
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
View(df)
optional_df <- read.csv("./optional_practice_dataset.csv")
View(optional_df)
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
View(optional_df,is.na = T)
View(optional_df$DRG.Definition,is.na = T)
View(optional_df$DRG.Definition,is.na == T)
unique (unlist (lapply (optional_df, function (x) which (is.na (x)))))
null1 <- subset(df,is.na(DRG.Definition) == T)
is.na(df$DRG.Definition) == T
names(optional_df)
colnames <- names(optional_df)
colnames
subset(optional_df,is.na(colnames))
str(colnames)
subset(optional_df,is.na(optional_df$1))
subset(optional_df,is.na(optional_df[1]))
subset(optional_df,is.na(optional_df[2]))
subset(optional_df,is.na(optional_df[3]))
subset(optional_df,is.na(optional_df[4]))
subset(optional_df,is.na(optional_df[5]))
subset(optional_df,is.na(DRG.Definition))
subset(optional_df,is.na(Provider.Id))
subset(optional_df,is.na(Provider.Name))
subset(optional_df,is.na(Provider.Street.Address))
subset(optional_df,is.na(Provider.City))
subset(optional_df,is.na(Provider.State))
subset(optional_df,is.na(Provider.Zip.Code))
subset(optional_df,is.na(Hospital.Referral.Region.Description))
data <- read.table(text="
A  B  C  D
1  3  NA 4
2  1  3  4
NA 3  3  5
4  2  NA NA
2  NA 4  3
1  1  1  2",header=T,sep="")
data
subset(data, is.na(C) | is.na(A))
names(data)
subset(data, is.na(names))
class(names(data))
ggplot(optional_df,aes(Average.Total.Payments,Average.Covered.Charges))
g <- ggplot(optional_df,aes(Average.Total.Payments,Average.Covered.Charges))
p <- g + geom_point()
p
p2 <- p + facet_grid(. ~ DRG.Definition)
p2
p3 <- p2 + facet_grid(. ~ Provider.State)
p3
print(p3)
print(p)
p3 <- p + facet_grid(. ~ Provider.State + DRG.Definitino)
print(p3)
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
p2
p3 <- p + facet_grid(. ~ Provider.State)
p3
p <- g + geom_point(aes(color = DRG.Definition))
p
p2 <- p + facet_grid(. ~ Provider.State)
p2
p3 <- p + facet_grid(. ~ Provider.State + DRG.Definition)
p3
qplot(Average.Covered.Charges, Average.Total.Payments, data=original_df, shape=am, color=am,
facets=Provider.State~DRG.Definition, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df, shape=am, color=am,
facets=Provider.State~DRG.Definition, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
?qplot
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",ylim=Average.Total.Payments/10000)
df_ylim <- optional_df$Average.Total.Payments/10000
df_ylim
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",ylim=df_ylim)
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",ylim=range(df_ylim))
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_condition()
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments", alpha=1/2)
?qplot
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments", alpha=1/2,xlim=c(0,100))
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments", alpha=1/2)
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments", alpha=1/20)
range(optional_df$Average.Covered.Charges)
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments", alpha=1/20)
qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
?qplot
?ggplot
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",log="xy")
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",log="x")
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=. ~ Provider.State, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",log="x",color=DRG.Definition)
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",alpha=1/10)
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",alpha=1/100)
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments",alpha=1/10)
qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
q<- qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
+       facets=Provider.State~DRG.Definition, size=I(0.5),
+       xlab="Covered Charges", ylab="Total Payments")
q<- qplot(Average.Total.Payments, Average.Covered.Charges, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges", ylab="Total Payments")
q
q2 <- q + opts(axis.text.x=element_text(angle = 90, hjust = 1))
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1))
q2
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_and_condition()
source("reprod_rsrch_optional1_week1.R")
NY_charges_vs_payments()
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_and_condition()
source("reprod_rsrch_optional2_week1.R")
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_and_condition()
range(optional_df$Average.Covered.Charges)
range(optional_df$Average.Total.Payments)
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_and_condition()
source("reprod_rsrch_optional1_week1.R")
NY_charges_vs_payments()
?theme
q2
optional_df
q <- qplot(Average.Covered.Charges, Average.Total.Payments, data=optional_df,
facets=Provider.State~DRG.Definition, size=I(0.5),
xlab="Covered Charges ($)", ylab="Total Payments ($)")
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1))
q2
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1),strip.text.x = element_text(size = 6))
q2
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1),strip.text.x = element_text(size = 4))
q2
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1),strip.text.x = element_text(size = 4,hjust=0))
q2
q2 <- q + theme(axis.text.x=element_text(angle = 90, hjust = 1),strip.text.x = element_text(size = 3,hjust=0))
q2
source("reprod_rsrch_optional2_week1.R")
charges_vs_payments_by_state_and_condition()
summary(optional_df)
getwd()
setwd("./week1/")
getwd()
setwd(".RepData_PeerAssessment1")
setwd("./RepData_PeerAssessment1")
getwd()
setwd("../week2/RepData_PeerAssessment1")
getwd()
data <- read.csv("activity.csv")
summary(data)
str(data)
View(data)
subset(data,!is.na(steps))
subset(data,!is.na(steps) && steps > 0)
subset(data,!is.na(steps) && steps != 0)
subset(data,(!is.na(steps) && steps != 0))
subset(data,(!is.na(steps) && steps == 0))
order(subset(data,!is.na(steps)))
?order
order(subset(data,!is.na(steps))
order(subset(data,!is.na(steps)),decreasing = T)
?sort
no_nas <- subset(data,!is.na(steps))
View(no_nas)
unique(no_nas$steps)
summary(no_nas)
sort(no_nas$steps, desc = TRUE)
sort(no_nas$steps, decreasing  = TRUE)
summary(data)
str(data)
unique(data$date)
?hist
hist(data$steps)
hist(data$steps,range(data$date))
hist(data$steps,breaks="date")
grouped_df <- data %>% group_by(date) %>% summarize(mean(steps))
library(dplyr)
grouped_df <- data %>% group_by(date) %>% summarize(mean(steps))
hist(grouped_df)
str(grouped_df)
View(grouped_df)
hist(grouped_df$mean(steps))
hist(grouped_df$`mean(steps)`)
grouped_df <- data %>% group_by(date) %>% summarize(sum(steps))
View(grouped_df)
hist(grouped_df)
hist(grouped_df$`sum(steps)`)
?plot
plot(grouped_df$date,grouped_df$sum(steps),type="h")
grouped_df <- data %>% group_by(date) %>% summarize(sum(steps))
str(grouped_df)
grouped_df <- data %>% group_by(date) %>% summarize_each(sum(steps))
grouped_df <- data %>% group_by(date) %>% summarize_each(funs(sum))
str(grouped_df)
plot(grouped_df$date,grouped_df$steps,type="h")
qplot(date,steps,data=grouped_df,stat="summary",fun.y="sum",geom="bar")
q <- qplot(date,steps,data=grouped_df,stat="summary",fun.y="sum",geom="bar")
print(q)
q
View(data)
q <- qplot(date,steps,data=data,fun.y="sum",geom="bar")
str(q)
?qplot
df <- read.csv("activity.csv")
qplot(date,data=df,geom="hist")
qplot(date,data=df)
qplot(date,data=df,ylim=range(0,1000))
?qplot
str(mtcars)
qplot(mpg, data = mtcars)
qplot(,mpg, data = mtcars)
str(df)
grouped_df <- df %>% group_by(date) %>% summarize(sum(steps))
View(grouped_df)
class(grouped_df)
str(grouped_df)
hist(df$date)
hist(df[2])
hist(df[[2]])
hist(df[,2])
names <- c("date","total_steps")
names
names(df) <- names
str(df)
View(df)
df <- read.csv("activity.csv")
str(df)
View(grouped_df)
str(grouped_df)
names <- c("date","total_steps")
names(grouped_df) <- names
View(grouped_df)
hist(grouped_df$date)
hist(as.numeric(grouped_df$date))
ggplot(data=grouped_df,aes(total_steps) + geom_histogram())
str(grouped_df)
ggplot(data=grouped_df,aes(as.Date(date)) + geom_histogram())
ggplot(data=grouped_df,aes(as.numeric(date)) + geom_histogram())
grouped_df
plot(grouped_df$date, grouped_df$total_steps,type="h")
qplot(grouped_df$date, grouped_df$total_steps,type="h")
?qplot
qplot(grouped_df$date, grouped_df$total_steps,geom ="h")
qplot(grouped_df$date, grouped_df$total_steps,geom ="hist")
qplot(grouped_df$date, grouped_df$total_steps,geom ="histogram")
ggplot(grouped_df$date, grouped_df$total_steps,geom ="histogram")
ggplot(aes(grouped_df$date, grouped_df$total_steps),geom ="histogram")
ggplot(aes(grouped_df$date, grouped_df$total_steps),geom ="histogram")
?ggplot
ggplot(grouped_df,aes(date,total_steps),geom ="histogram")
ggplot(grouped_df,aes(date,total_steps))
grouped_df
g <- ggplot(grouped_df,aes(date,..total_steps..))
g
g <- ggplot(grouped_df,aes(date,..count..))
g
g <- ggplot(grouped_df,aes(date,..sum..))
g
print(g)
ls()
rm=(list(ls))
ls()
rm=(list(ls()))
ls()
