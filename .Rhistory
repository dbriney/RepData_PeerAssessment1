demo()
demo(base.image)
demo(image)
demo(error.catching)
q()
getwd()
package_version("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, r_version == is.na(c(3, 5, NA, 10)))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(c(3, 5, NA, 10)))
filter(cran, r_version == !is.na(c(3, 5, NA, 10)))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id:size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/ 2^10)
mutate(cran3,correct_size = size - 1000)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
q()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x.y)
plot(x,y)
library(swirl)
swirl()
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm = T)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Ozone and Wind in New York City")
title(main="Wind and Ozone in NYC")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
?points
par("points")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
?points
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
library(nmle)
install.packages(nmle)
library(nlme)
library(lattice)
xyplot(weight~time| Diet, BodyWeight)
xyplot(weight~Time| Diet, BodyWeight)
?lattice
?xyplot
library(datasets)
data("airquality")
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
str(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
str(movies)
library(ggplot2)
str(movies)
getwd()
setwd("/Users/DBrine001/Documents/Pers/datasciencecoursera/reproducible_research/week2/RepData_PeerAssessment1")
getwd()
df <- read.csv("activity.csv")
df
str(df)
with(df,plot(date,steps,type="l",xaxt="",xlab="Date",ylab="Total Steps"))
with(df,plot(date,steps,type="h",xaxt="",xlab="Date",ylab="Total Steps"))
with(df,plot(date,sum(steps),type="h",xaxt="",xlab="Date",ylab="Total Steps"))
df2 <- df %>% group_by(date) %>% summarize_each(sum(steps))
library(dplyr)
df2 <- df %>% group_by(date) %>% summarize_each(sum(steps))
df2 <- df %>% group_by(date) %>% summarize(Total_Steps = sum(steps))
df2
with(df2,plot(date,Total_Steps,type="h",xaxt="",xlab="Date",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="l",xaxt="",xlab="Date",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="l",xlab="Date",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="h",xlab="Date",ylab="Total Steps"))
?plot
with(df2,plot(date,Total_Steps,type="h",xlab="",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="s",xlab="",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="l",xlab="",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="b",xlab="",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="b",xlab="",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="b",xlab="Hello World",ylab="Total Steps"))
with(df2,plot(date,Total_Steps,type="b",xlab="",ylab="Total Steps"))
hist(df2$Total_Steps)
hist(df2$Total_Steps,xlab="Total Steps per Day")
df2 <- df %>% group_by(date) %>% summarize_each(sum(steps))
df2 <- df %>% group_by(date) %>% summarize(Total_Steps = sum(steps))
View(df2)
hist(df2$Total_Steps,xlab="Total Steps per Day")
hist(df2$Total_Steps,xlab="Total Steps per Day")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30))
?hist
?seq
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(seq(0,30,by=2)))
seq(0,30,by=2)
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = seq(0,30,by=2))
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30))
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012")
?hist
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = c("red",blue"))
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylab="Days", ylim = range(0,30),main="Total Steps Histogram, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps per Day",ylab="Days", ylim = range(0,30),main="Total Steps Histogram, Subject X, October-November 2012",col = "blue")
hist(df2$Total_Steps,xlab="Total Steps Per Day",ylab="Days", ylim = range(0,30),main="Total Steps Histogram, Subject X, October-November 2012",col = "blue")
mean(df2$Total_Steps)
mean(df2$Total_Steps,na.rm = T)
median(df2$Total_Steps,na.rm = T)
mean(df2$Total_Steps,na.rm = T);median(df2$Total_Steps,na.rm = T)
View(df)
unique(df$interval)
df3 <- df %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
View(df3)
df3 <- subset(df,!is.na(steps)) %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
View(df3)
with(df3,plot(Average_Steps,interval,type="l"))
with(df3,plot(interval,Average_Steps,type="l"))
colMax <- function(df3) sapply(df3$Average_Steps, max, na.rm = TRUE)
colMax
str(df3)
max_avg_steps <- max(df3$Average_Steps)
max_avg_steps
sort_df3 <- sort(df3$Average_Steps,decreasing = TRUE)
View(sort_df3)
most_active_interval <- sort_df3[1,]
most_active_interval <- sort_df3[[1,1]]
most_active_interval <- sort_df3[1,1]
class(sort_df3)
colMax <- function(df3) sapply(df3, max, na.rm = TRUE)
colMax
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(df3)
colMax(df3$interval)
colMax(df3)
x <- colMax(df3)
x
class(x)
x$Average_Steps
subset(df3,Average_Steps == 206.1698)
class(df3)
subset(df3,Average_Steps == 206.1698)
View(sort_df3)
?filter
View(df3)
filter(df3, Average_Steps == max(Average_Steps))
interval_with_max_steps <- filter(df3, Average_Steps == max(Average_Steps))
interval_with_max_steps
class(interval_with_max_steps)
str(interval_with_max_steps)
interval_with_max_steps$interval
summary(df)
df_with_na <- df[complete.cases(df),]
str(df_with_na)
df_with_na <- df[!complete.cases(df),]
str(df_with_na)
summary(df)
unique(df$steps)
is.na(df$interval)
is.na(df$interval) == T
subset(df,is.na(df$interval) == T)
subset(df,is.na(df$date) == T)
subset(df,is.na(df$steps) == T)
str(df_with_na)
methods(is.na)
?mutate
df4 <- mutate(df,is.na(steps) = df3$Average_Steps)
View(df3)
?merge
df4 <- merge(df,df3,by="interval")
str(df4)
View(df4)
subset(df4, interval == 835)
View(subset(df4, interval == 835))
View(subset(df4, interval == 5))
subset(df4, interval > 755 && interval < 905)
subset(df4, interval > 755 & interval < 905)
x.x <- subset(df4, interval > 755 & interval < 905)
View(x.x)
?head
df5 <- ifelse(is.na(df4$steps),df4$Average_Steps,df4$Average_Steps)
View(df5)
class(df5)
df4$steps <- ifelse(is.na(df4$steps),df4$Average_Steps,df4$Average_Steps)
View(df4)
df4 <- merge(df,df3,by="interval")
View(df4)
ifelse(is.na(df4$steps),df4$Average_Steps,df4$Average_Steps)
$steps),df4$Average_Steps,df4$Average_Steps)
View(df4)
df4$steps <- ifelse(is.na(df4$steps),df4$Average_Steps,df4$steps)
View(df4)
df_na_updated <- df4
View(df_na_updated)
summary(df_na_updated)
View(df)
View(df4)
summary(df4)
df4$steps <- ifelse(is.na(df4$steps),df4$Average_Steps,df4$steps)df <- read.csv("activity.csv")
df <- read.csv("activity.csv")
summary(df)
df3 <- subset(df,!is.na(steps)) %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
summary(df3)
str(df)
str(df3)
df4 <- merge(df,df3,by="interval")
str(df4)
df4$steps <- ifelse(is.na(df4$steps),df4$Average_Steps,df4$steps)
str(df4)
summary(df4)
summary(df)
View(df4)
df5 <- df4 %>% group_by(date) %>% summarize(Total_Steps = sum(steps))
View(df5)
View(df2)
View(df)
?weekdays
str(df)
weekdays(as.Date(df$date))
wkday_yn <- ifelse(weekdays(as.Date(df$date)) %in% c('Saturday','Sunday'), "Weekend","Weekday")
wkday_yn
df$wkday <- ifelse(weekdays(as.Date(df$date)) %in% c('Saturday','Sunday'), "Weekend","Weekday")
head(df)
View(df)
str(df)
as.factor(df$wkday) <- ifelse(weekdays(as.Date(df$date)) %in% c('Saturday','Sunday'), "Weekend","Weekday")
df$wkday <- as.factor(ifelse(weekdays(as.Date(df$date)) %in% c('Saturday','Sunday'), "Weekend","Weekday"))
View(df)
str(df)
df6 <- subset(df,!is.na(steps)) %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
View(df6)
par(mfrow = c(2,1), mar = c(5,4,2,1))
with(df6,{})
with(df6,{})
mean(df2$Total_Steps)
mean(df2$Total_Steps,na.rm = T)
median(df2$Total_Steps,na.rm = T)
median(df5$Total_Steps,na.rm = T)
median(df5$Total_Steps)
View(df3)
with(df3,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps"))
df_orig <- read.csv("activity.csv")
View(df_orig)
df_orig$wkday <- as.factor(ifelse(weekdays(as.Date(df_orig$date)) %in% c('Saturday','Sunday'), "Weekend","Weekday"))
View(df_orig)
df_avg_steps_per_interval_wkday <- subset(df_orig,!is.na(steps) & df_orig$wkday == "Weekday") %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
View(df_avg_steps_per_interval_wkday)
df_avg_steps_per_interval_wkend <- subset(df_orig,!is.na(steps) & df_orig$wkday == "Weekend") %>% group_by(interval) %>% summarize(Average_Steps = mean(steps))
View(df_avg_steps_per_interval_wkend)
?lattice
str(df_avg_steps_per_interval_wkday)
?densityplot
install.packages("lattice")
?densityplot
library(lattice)
?densityplot
par(mfrow = c(2,1), mar = c(5,4,2,1))
plot(interval,Average_Steps,type="l",xlab="5-minute interval", y
?plot
with(df_avg_steps_per_interval_weekday,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps"))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps"))
with(df_avg_steps_per_interval_wkend,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps"))
with(df_avg_steps_per_interval_wkend,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps",main="Total Steps Per Interval - WEEKEND"))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps",main="Total Steps Per Interval - WEEKDAY"))
par(mfrow = c(2,1), mar = c(5,4,2,1))
par(mfrow = c(2,1), mar = c(5,4,2,1))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps",main="Total Steps Per Interval - WEEKDAY"))
with(df_avg_steps_per_interval_wkend,plot(interval,Average_Steps,type="l",xlab="5-minute interval", ylab="Average Steps",main="Total Steps Per Interval - WEEKEND"))
?par
par(mfrow = c(2,1), mar = c(5,4,2,1))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="WEEKDAY 5-minute interval", ylab="Average Steps",main="Total Steps Per Interval"))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="WEEKDAY 5-minute interval", ylab="Average Steps",main="Steps Per Interval, Subject X, Oct-Nov 2012"))
par(mfrow = c(2,1), mar = c(5,4,2,1))
with(df_avg_steps_per_interval_wkday,plot(interval,Average_Steps,type="l",xlab="WEEKDAY 5-minute interval", ylab="Average Steps",main="Steps Per Interval, Subject X, Oct-Nov 2012"))
with(df_avg_steps_per_interval_wkend,plot(interval,Average_Steps,type="l",xlab="WEEKEND 5-minute interval", ylab="Average Steps"))
?par
